/* Focus Button Styles */
.focus-button {
  position: relative;
  height: 1.75rem;
  width: 1.75rem;
  padding: 0;
  border-radius: 0.375rem;
  transition: all 0.2s ease;
}

.focus-button:hover {
  background-color: hsl(var(--accent));
  color: hsl(var(--primary));
  transform: scale(1.05);
}

.focus-button.is-focused {
  background-color: hsl(var(--primary));
  color: hsl(var(--primary-foreground));
}

.focus-button.is-focused:hover {
  background-color: hsl(var(--primary) / 0.9);
}

/* Focus dropdown content */
.focus-dropdown-content {
  min-width: 200px;
  padding: 0.5rem;
  border-radius: 0.5rem;
  border: 1px solid hsl(var(--border));
  background: hsl(var(--background));
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
  z-index: 50;
}

.focus-dropdown-content .dropdown-item {
  padding: 0.5rem 0.75rem;
  border-radius: 0.375rem;
  cursor: pointer;
  transition: all 0.2s ease;
}

.focus-dropdown-content .dropdown-item:hover {
  background-color: hsl(var(--accent));
}

.focus-dropdown-content .dropdown-item.active {
  background-color: hsl(var(--primary));
  color: hsl(var(--primary-foreground));
}

/* Focus highlight styles following TipTap official example */
.ProseMirror .has-focus {
  border-radius: 3px;
  box-shadow: 0 0 0 2px hsl(var(--primary));
  outline: none;
  transition: box-shadow 0.2s ease;
}

/* Different focus modes */
.ProseMirror[data-focus-mode="all"] .has-focus {
  box-shadow: 0 0 0 2px hsl(var(--primary));
}

.ProseMirror[data-focus-mode="deepest"] .has-focus {
  box-shadow: 0 0 0 2px hsl(var(--destructive));
}

.ProseMirror[data-focus-mode="shallowest"] .has-focus {
  box-shadow: 0 0 0 2px hsl(var(--secondary));
}

/* Enhanced focus styles for different node types */
.ProseMirror .has-focus.paragraph {
  padding: 0.25rem;
  margin: -0.25rem;
}

.ProseMirror .has-focus.heading {
  padding: 0.125rem 0.25rem;
  margin: -0.125rem -0.25rem;
}

.ProseMirror .has-focus.listItem {
  border-radius: 0.25rem;
  padding: 0.125rem;
  margin: -0.125rem;
}

.ProseMirror .has-focus.codeBlock {
  border-radius: 0.5rem;
  padding: 0.5rem;
  margin: -0.5rem;
}

.ProseMirror .has-focus.blockquote {
  border-radius: 0.375rem;
  padding: 0.25rem 0.5rem;
  margin: -0.25rem -0.5rem;
  border-left: 4px solid hsl(var(--primary));
}

/* Dark mode adjustments */
.dark .ProseMirror .has-focus {
  box-shadow: 0 0 0 2px hsl(var(--primary));
}

.dark .focus-dropdown-content {
  background: hsl(var(--background));
  border-color: hsl(var(--border));
}

/* Animation for focus changes */
@keyframes focusIn {
  from {
    box-shadow: 0 0 0 0 hsl(var(--primary) / 0);
  }
  to {
    box-shadow: 0 0 0 2px hsl(var(--primary));
  }
}

.ProseMirror .has-focus {
  animation: focusIn 0.2s ease-out;
}

/* Focus indicator for the entire editor */
.ProseMirror:focus-within {
  outline: none;
}

.ProseMirror.ProseMirror-focused {
  outline: none;
}

/* Visual improvements for focus feedback */
.focus-button-indicator {
  position: absolute;
  top: -2px;
  right: -2px;
  width: 6px;
  height: 6px;
  background-color: hsl(var(--primary));
  border-radius: 50%;
  opacity: 0;
  transition: opacity 0.2s ease;
}

.focus-button.is-focused .focus-button-indicator {
  opacity: 1;
}
